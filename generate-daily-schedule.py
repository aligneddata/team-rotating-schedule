#
# This program generate a team schedule on daily rotating basis.
# the majority of this program is generated by chatGPR program
# License: GNU GPLv3

import calendar
import holidays
import csv
import sqlite3

ca_holidays = holidays.Canada()
num_days = calendar.monthrange(2023, 2)[1]

def is_vacation(day, person, vacations):
    for vacation in vacations:
        if vacation[0] == day and vacation[1] == person:
            return True
    return False

with open('planned_vacations.csv', 'r') as f:
    reader = csv.reader(f)
    vacations = list(reader)

with open('additional_holidays.txt', 'r') as f:
    additional_holidays = f.read().splitlines()
    for holiday in additional_holidays:
        ca_holidays.append(holiday)

with open('team.txt', 'r') as f:
    team = f.read().splitlines()

schedule = {}
for day in range(2, num_days + 2):
    if calendar.weekday(2023, 2, day) >= 5 or date(2023, 2, day) in ca_holidays:
        continue
    person = team[(day-2) % len(team)]
    if is_vacation(day, person, vacations):
        continue
    schedule[day] = person

conn = sqlite3.connect('schedule.db')
cursor = conn.cursor()

cursor.execute('''
CREATE TABLE IF NOT EXISTS schedule (
    date INT PRIMARY KEY,
    person TEXT
)
''')

for day, person in schedule.items():
    cursor.execute("INSERT INTO schedule (date, person) VALUES (?, ?)", (day, person))

conn.commit()
conn.close()

with open("schedule.csv", "w") as f:
    writer = csv.writer(f)
    writer.writerow(["Date", "Person"])
    for day, person in schedule.items():
        writer.writerow([day, person])

print("The schedule has been printed to schedule.csv and schedule.db.")



